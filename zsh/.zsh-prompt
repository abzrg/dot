# -- window title --

    # src: archwiki
    autoload -Uz add-zsh-hook
    function xterm_title_precmd () {
        print -Pn -- '\e]2;%n@%m:%~\a'
        [[ "$TERM" == 'screen'* ]] && print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-}\e\\'
    }

    function xterm_title_preexec () {
        print -Pn -- '\e]2;%n@%m:%~ ‚Äî ' && print -n -- "${(q)1}\a"
        [[ "$TERM" == 'screen'* ]] && { print -Pn -- '\e_\005{g}%n\005{-}@\005{m}%m\005{-} \005{B}%~\005{-} %# ' && print -n -- "${(q)1}\e\\"; }
    }

    if [[ "$TERM" == (Eterm*|alacritty*|aterm*|gnome*|konsole*|kterm*|putty*|rxvt*|screen*|tmux*|xterm*|st*) ]]; then
        add-zsh-hook -Uz precmd xterm_title_precmd
        add-zsh-hook -Uz preexec xterm_title_preexec
    fi


# -- shlvl --

    # Allow dynamic command prompt (Enable substitution in prompt)
    setopt prompt_subst

    # show how many subshell is spawned using the number of prompt sign
    function __shlvl_prompt()
    {
        # check if you are in tmux or not
        # if you are in tmux the shlvl is incremented by one, so it must be
        # decremented to show that we are in the lowest level in tmux
        if [ -z $TMUX ]
        then
            # not in tmux
            local level=$(($SHLVL))
        else
            # in tmux
            local level=$(($SHLVL - 1))
        fi

        # choose prompt sign
        local prompt_sign='->'

        # the final suffix of the prompt will be the shown w.r.t number of subshells
        # spawn
        local suffix="%%"
        for i in {1.."${level}"}
        do
            suffix="$suffix$prompt_sign"
        done

        print "$suffix"
    }


# -- git prompt (fast) --

    # src: https://gist.github.com/Ragnoroct/c4c3bf37913afb9469d8fc8cffea5b2f
    function __fastgit_prompt() {
        local headfile head branch
        local dir="$PWD"

        while [ -n "$dir" ]; do
            if [ -e "$dir/.git/HEAD" ]; then
                headfile="$dir/.git/HEAD"
                break
            fi
            dir="${dir%/*}"
        done

        if [ -e "$headfile" ]; then
            read -r head < "$headfile" || return
            case "$head" in
                ref:*) branch="${head##*/}" ;;
                "") branch="" ;;
                *) branch="${head:0:7}" ;;  #Detached head. You can change the format for this too.
            esac
        fi

        if [ -z "$branch" ]; then
            return 0
        fi

        if [ -z "$1" ]; then
            # Default format
            # printf " %s" "%F{blue}git:(%F{magenta}$branch%f%F{blue})%f"
            # printf " %s" "%F{blue}git:(%F{red}$branch%f%F{blue})%f"
            printf " %s" "($branch)"
        else
            # Use passed format string
            printf "$1" "$branch"
        fi
    }

    # src: https://github.com/ohmyzsh/ohmyzsh/issues/5068
    function __path_prompt() {
        if [ "$PWD" == "$HOME" ]; then 
            printf "~"
        else
            printf ${${:-${(j:/:)${(M)${(s:/:)${(D)PWD:h}}#(|.)[^.]}}/${PWD:t}}//~/\~}
        fi
    }

    function __foam_env_prompt() {
        if test -z $WM_PROJECT_DIR; then
            printf ""
        else
            printf " %s(of-$WM_PROJECT_VERSION)%s" '%F{red}' '%f'

        fi
    }

# -- zsh prompt --

    # # Luke Smith's prompt
    # autoload -U colors && colors
    # export PROMPT="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%m %{$fg[magenta]%}%1~%{$fg[red]%}]%{$reset_color%}\$(__fastgit_prompt)$%b "


    # PROMPT="%(?.%F{green}.%F{red})‚ùØ%f %F{blue}%1~%f"       #prompt indicator
    # # PROMPT="> %1~"                                       # path
    # PROMPT="$PROMPT\$(__fastgit_ps1) %% "                 # git prompt
    # export PROMPT

    # PROMPT='%F{green}%n@%m%f:%f%B%F{blue}$(__path_prompt)%f%b'
    # PROMPT="$PROMPT"'$(__fastgit_prompt)'
    # PROMPT="$PROMPT"'$(__foam_env_prompt)'
    # PROMPT="$PROMPT"$'\n'
    # export PROMPT="$PROMPT%(?..%F{#f44747})$%f " # %#


    # # src: https://github.com/ohmyzsh/ohmyzsh/issues/5068
    # zle-line-pre-redraw() {
    #     (( BUFFERLINES == 1 + ${#BUFFER//[^$'\n']} )) || PREDISPLAY=$'\n‚Ü™  '
    # }
    # zle -N zle-line-pre-redraw
    # # ü†ñü°¢ü°≤ü¢Ç ‚ûû  ‚ûù   ‚ûú   ‚ûî     ‚Üí
    # PROMPT="%(?.%F{green}.%F{red})‚Üí%f"       #prompt indicator
    # PROMPT="$PROMPT %F{cyan}%1~%f"
    # PROMPT="$PROMPT"'$(__fastgit_prompt)'
    # export PROMPT="$PROMPT  %% "



    # src: https://github.com/ohmyzsh/ohmyzsh/issues/5068
    zle-line-pre-redraw() {
        (( BUFFERLINES == 1 + ${#BUFFER//[^$'\n']} )) || PREDISPLAY=$'\n‚Ü™ '
    }
    zle -N zle-line-pre-redraw

    # PROMPT='%F{green}%n@%m%f:%B%F{blue}$(__path_prompt)%f%b'
    PROMPT='%(?.%F{green}.%F{red})‚ùØ%f '
    # PROMPT="%F{green}%n@%m%f:%B%F{blue}%1~%f%b"
    PROMPT="$PROMPT"'$(__fastgit_prompt)'
    PROMPT="$PROMPT %B%F{blue}%1~%f%b "
    export PROMPT


    # # -- WINLINE --------------------------------
    # # prompt Winline
    # setopt TRANSIENT_RPROMPT
    # fpath+="$HOME/.local/src/winline"
    # . $HOME/.local/src/winline/winline.zsh



