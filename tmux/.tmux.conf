# %{{{ Misc. Settings -------------------------------------------------------------------

if-shell 'uname | grep -q Darwin' { set-option -g default-shell /opt/homebrew/bin/zsh }
if-shell 'uname | grep -q Linux' { set-option -g default-shell /usr/bin/zsh }
if-shell 'uname | grep -q Linux' { set-option -g default-command /usr/bin/zsh }
if-shell 'uname | grep -q Darwin' { set-option -g default-command /opt/homebrew/bin/zsh }

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',*:Tc'
# the cursor shape
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

set-option -g history-limit 100000
setw -g aggressive-resize on
set -g mouse on
set -sg escape-time 0
set -g display-panes-time 2000

set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set-option -w -g automatic-rename off

setw -g monitor-activity on
set -g visual-activity off
set -g focus-events on

set-option -g set-titles on
set-option -g set-titles-string '[#S]  |  #T'

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1
# Don't wrap searches
set-option -w -g wrap-search off

# Handle sessions upon exit (switch to another if exists or exit tmux)
set-option -g detach-on-destroy off

# %}}}

# %{{{ Statusline -----------------------------------------------------------------------

set-option -g status on
set -g status-position bottom
set -g status-justify left
set -g status-interval 5

set -g window-status-activity-style none
set -g window-status-bell-style fg=yellow,underscore
set-option -ga pane-active-border-style bg=default,fg=default

# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :/

set -g status-bg "#14161b"
set -g status-fg colour137

set -g status-left-length 15
set -g status-left '#[fg=blue][#{=/10/>:session_name}]#[fg=default] '
set -g status-right-length 50
set -g status-right '#[fg=gray,bg=default] %d/%m %H:%M:%S'

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# %}}}

# %{{{ bindings  ------------------------------------------------------------------------

unbind-key C-b
unbind C-b
set -g prefix C-s
bind-key C-s send-prefix

bind r source-file ~/.tmux.conf
bind C-l clear-history

# Create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"
bind "\"" split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Stay in copy mode on drag end.
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Reenable automatic renaming for the current window
bind R setw automatic-rename on \; display-message "automatic rename enabled"

# Search back to last prompt
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "%Â " \; send-keys -X next-word

# Go to session 0:vpn
bind-key v switch-client -t 0:vpn

bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r m run-shell "tmux neww tmux-man.sh"
bind-key -n 'M-;' run-shell "tmux splitw tmux-dict.sh"
bind-key -r f run-shell "tmux neww ~/.local/bin/scripts/tmux-sessionizer.sh"

# back to last window
bind-key 'o' last-window

# Switch back and forth between current and Old seesion
bind-key -n 'M-o' 'switch-client -l'

bind -n M-j previous-window
bind -n M-k next-window
bind -n M-h switch-client -p
bind -n M-l switch-client -n

# Toggle status bar visibility
# https://dev.to/rahuldhole/tmux-toggle-status-bar-288m
bind B run-shell "tmux setw -g status \$(tmux show -g -w status | grep -q off && echo on || echo off)"

# Take todo
bind -r T neww -n "#[fg=color187,italics]todo#[default]" -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/todo.md"
# Capture todo
bind -r t neww -n "#[fg=color187,italics]capture[todo]#[default]" -c "#{pane_current_path}" "sh ~/.local/bin/scripts/capture-todo.sh"
# Capture a thought into journal
bind -r C neww -n "#[fg=color187,italics]capture[jrnl]#[default]" -c "#{pane_current_path}" "sh ~/.local/bin/scripts/capture-jrnl.sh"

# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man git"
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Down" "send -Mt="'

# %}}}

# %{{{ vi mode --------------------------------------------------------------------------

setw -g mode-keys vi

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

bind -T copy-mode-vi "v" send -X begin-selection
bind -T copy-mode-vi "r" send -X rectangle-toggle
bind -T copy-mode-vi "V" send -X select-line

if-shell 'uname | grep -q Linux' { bind-key -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i' }
if-shell 'uname | grep -q Linux' { bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i' }
if-shell 'uname | grep -q Darwin' { bind-key -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel 'pbcopy' }
if-shell 'uname | grep -q Darwin' { bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy' }

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# https://github.com/wincent/wincent/blob/bb727efaa67196ef6d66971f49ead5041eaa82fd/aspects/dotfiles/files/.tmux.conf#L155
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

bind-key 'n' next-window
bind-key 'N' previous-window

# %}}}

# vim: fdm=marker
