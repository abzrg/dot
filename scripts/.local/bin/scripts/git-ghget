#!/bin/bash -e

# Instead of waiting for github to prepare things for download of a file, I'll take
# control!

main() {
    local args
    args=($(parse_arguments "$@"))
    local github_url="${args[0]}"
    local output_path="${args[1]}"

    validate_github_url "$github_url"

    local raw_url
    raw_url=$(convert_to_raw_url "$github_url")

    local filename
    filename=$(extract_filename "$raw_url")

    # Unless output path is provided use current directory with the original filename
    if [[ -z "$output_path" ]]; then
        output_path="$filename"
    fi

    download_file "$raw_url" "$output_path"
}

display_help() {
    cat <<EOF
usage: git-ghget <GitHub URL> [-o <output path>] [--help]

This command downloads a file from a GitHub repository URL. It converts the URL 
to the corresponding raw URL and saves the file locally.

OPTIONS:
    -o, --output      Specify an output file path or directory. 
                      If not provided, the file is saved in the current directory
                      with its original filename.
    -h, --help        Display this help message.

EXAMPLES:
    Download a file and save with its original name:
        git-ghget https://github.com/user/repo/blob/main/file.txt

    Download a file and specify an output path:
        git-ghget https://github.com/user/repo/blob/main/file.txt -o /path/to/output.txt
EOF
    exit 0
}

validate_github_url() {
    local github_url="$1"

    if [[ "$github_url" != *"github.com"* || "$github_url" != *"/blob/"* ]]; then
        echo "Invalid GitHub URL. Ensure it's a file URL with '/blob/'."
        exit 1
    fi
}

convert_to_raw_url() {
    local github_url="$1"
    echo "$github_url" | sed 's|github.com|raw.githubusercontent.com|' | sed 's|/blob/|/|'
}

extract_filename() {
    local url="$1"
    basename "$url"
}

parse_arguments() {
    local github_url=""
    local output_path=""

    while [[ $# -gt 0 ]]; do
        case "$1" in
            -o|--output)
                output_path="$2"
                shift 2
                ;;
            -h|--help)
                display_help
                ;;
            *)
                github_url="$1"
                shift
                ;;
        esac
    done

    if [[ -z "$github_url" ]]; then
        echo "Error: No GitHub URL provided."
        echo "Use -h or --help for usage details."
        exit 1
    fi

    echo "$github_url" "$output_path"
}

download_file() {
    local raw_url="$1"
    local output_path="$2"

    echo "Downloading file from: $raw_url"

    if command -v curl > /dev/null; then
        curl --continue-at - --output "$output_path" "$raw_url"
    elif command -v wget > /dev/null; then
        wget --continue --output-document "$output_path" "$raw_url"
    else
        echo "Error: Neither 'curl' nor 'wget' is installed."
        exit 1
    fi

    if [[ -f "$output_path" ]]; then
        echo "File downloaded and saved as: $output_path"
    else
        echo "Failed to download the file."
        exit 1
    fi
}

main "$@"
